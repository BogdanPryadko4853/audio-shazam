name: Audio Ingestion Service CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  DOCKER_IMAGE_NAME: audio-ingestion-service

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Start services using Docker Compose
      run: |
        cat <<EOF > docker-compose.yml
        version: '3.8'
        services:
          zookeeper:
            image: confluentinc/cp-zookeeper:7.3.0
            ports:
              - "2181:2181"
            environment:
              ZOOKEEPER_CLIENT_PORT: 2181
              ZOOKEEPER_TICK_TIME: 2000

          kafka:
            image: confluentinc/cp-kafka:7.3.0
            ports:
              - "9092:9092"
            environment:
              KAFKA_BROKER_ID: 1
              KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
              KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
              KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
              KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
              KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
            depends_on:
              - zookeeper

          minio:
            image: minio/minio
            ports:
              - "9000:9000"
              - "9001:9001"
            environment:
              MINIO_ROOT_USER: minioadmin
              MINIO_ROOT_PASSWORD: minioadmin
            command: server /data --console-address ":9001"
        EOF
        docker-compose up -d
        sleep 30
        docker ps -a

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'maven'

    - name: Run tests with Maven
      run: cd audio-ingestion-service && mvn clean verify
      env:
        SPRING_KAFKA_BOOTSTRAP_SERVERS: localhost:9092
        MINIO_ENDPOINT: http://localhost:9000
        MINIO_ACCESS_KEY: minioadmin
        MINIO_SECRET_KEY: minioadmin
        TESTCONTAINERS_RYUK_DISABLED: true

    - name: Build Docker image
      run: |
        cd audio-ingestion-service
        docker build -t $DOCKER_IMAGE_NAME .

    - name: Clean up
      if: always()
      run: docker-compose down
